# Use official Jenkins LTS as base
FROM jenkins/jenkins:lts

# Switch to root to install tools
USER root

# Install Docker CLI and other dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release \
        python3 \
        python3-pip \
        python3-venv \
        sudo \
        vim && \
    rm -rf /var/lib/apt/lists/*

# Install Docker CLI
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo \
         "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
         $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    rm -rf /var/lib/apt/lists/*

# Install Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

# Add jenkins to docker group (matching the GID from the host)
ARG DOCKER_GID=972
RUN groupadd -g ${DOCKER_GID} docker && \
    usermod -aG docker jenkins

# Switch back to jenkins user
USER jenkins

# Install Jenkins plugins
RUN jenkins-plugin-cli --plugins \
    docker-workflow:1.29 \
    docker-plugin:1.2.10 \
    docker-commons:1.19 \
    docker-java-api:3.1.5.2 \
    docker-build-step:2.13 \
    docker-build-publish:1.3.3 \
    docker-custom-build-environment:1.7.7 \
    docker-pipeline:1.29 \
    docker-traceability:2.3.0 \
    docker-commons:1.19 \
    docker-workflow:1.29
